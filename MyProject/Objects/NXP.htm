<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\NXP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\NXP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Mar 30 10:35:34 2021
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; UART1_INIT &rArr; UART_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3f]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">MemManage_Handler</a><BR>
 <LI><a href="#[9]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">BusFault_Handler</a><BR>
 <LI><a href="#[a]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">UsageFault_Handler</a><BR>
 <LI><a href="#[b]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SVC_Handler</a><BR>
 <LI><a href="#[c]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">DebugMon_Handler</a><BR>
 <LI><a href="#[d]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">PendSV_Handler</a><BR>
 <LI><a href="#[1b]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC1_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[23]">ADC2_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[27]">COMP1_2_3_4_5_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_3_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel4_5_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[14]">EXTI0_1_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[15]">EXTI2_3_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[16]">EXTI4_15_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[17]">HWDIV_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[26]">I2C1_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[8]">MemManage_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[10]">PVD_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[11]">PWM_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[13]">RCC_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[28]">SPI1_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[29]">SPI2_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from isr.o(i.SysTick_Handler) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_mm32spin2xx_p.o(i.SystemInit) referenced from startup_mm32spin2xx_p.o(.text)
 <LI><a href="#[22]">TIM14_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[24]">TIM16_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[25]">TIM17_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[1c]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[1d]">TIM1_CC_IRQHandler</a> from isr.o(i.TIM1_CC_IRQHandler) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[1e]">TIM2_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[1f]">TIM3_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[20]">TIM8_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[21]">TIM8_CC_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[2a]">UART1_IRQHandler</a> from isr.o(i.UART1_IRQHandler) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[2b]">UART2_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[f]">WWDG_IRQHandler</a> from startup_mm32spin2xx_p.o(.text) referenced from startup_mm32spin2xx_p.o(RESET)
 <LI><a href="#[2e]">__main</a> from __main.o(!!!main) referenced from startup_mm32spin2xx_p.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[83]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[84]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[85]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[86]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[87]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[88]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[89]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[92]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[94]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[95]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[96]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[97]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[98]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[99]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[30]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[a2]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[33]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[37]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; UART1_INIT &rArr; UART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a5]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>COMP1_2_3_4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>HWDIV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM8_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mm32spin2xx_p.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IT_ReceiveDATA
</UL>

<P><STRONG><a name="[a8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[39]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ab]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ac]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ad]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>AutoCalPllFactor</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, system_mm32spin2xx_p.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
</UL>

<P><STRONG><a name="[af]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>Decre_Delay_ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tim_base.o(i.Decre_Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[44]"></a>GPIO_INIT</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, board.o(i.GPIO_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_INIT
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>GPIO_Init</STRONG> (Thumb, 222 bytes, Stack size 28 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_INIT
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Config
</UL>

<P><STRONG><a name="[64]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[52]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ReadOutputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1_Toggle
</UL>

<P><STRONG><a name="[47]"></a>KEY1_Server</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY1_Server))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY1_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>

<P><STRONG><a name="[49]"></a>KEY2_Server</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY2_Server))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY2_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>

<P><STRONG><a name="[4a]"></a>KEY3_Server</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY3_Server))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY3_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>

<P><STRONG><a name="[4b]"></a>KEY4_Server</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY4_Server))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY4_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>

<P><STRONG><a name="[4c]"></a>KEY5_Server</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY5_Server))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY5_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>

<P><STRONG><a name="[4d]"></a>KEY6_Server</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY6_Server))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY6_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>

<P><STRONG><a name="[4e]"></a>KEY_Config</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, key.o(i.KEY_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KEY_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>KEY_Reader</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, key.o(i.KEY_Reader))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = KEY_Reader &rArr; KEY6_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_Server
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_Server
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_Server
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_Server
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_Server
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_Server
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_10ms_Serv
</UL>

<P><STRONG><a name="[72]"></a>KEY_SCAN</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, key.o(i.KEY_SCAN))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_10ms_Serv
</UL>

<P><STRONG><a name="[48]"></a>KEY_TEST</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, key.o(i.KEY_TEST))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_Server
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_Server
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_Server
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_Server
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_Server
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_Server
</UL>

<P><STRONG><a name="[51]"></a>LED1_Toggle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, led.o(i.LED1_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TEST
</UL>

<P><STRONG><a name="[53]"></a>LED_INIT</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, led.o(i.LED_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
</UL>

<P><STRONG><a name="[45]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[46]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[56]"></a>RCC_DeInit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[54]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, hal_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5a]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[5d]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[5e]"></a>RCC_HCLKConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[57]"></a>RCC_HSEConfig</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[55]"></a>RCC_INIT</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, board.o(i.RCC_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_INIT &rArr; RCC_PLLConfig &rArr; RCC_PLLDMDNConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCOConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>RCC_MCOConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_MCOConfig))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[5f]"></a>RCC_PCLK1Config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[60]"></a>RCC_PCLK2Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[59]"></a>RCC_PLLCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[5b]"></a>RCC_PLLConfig</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, hal_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_PLLConfig &rArr; RCC_PLLDMDNConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLDMDNConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[62]"></a>RCC_PLLDMDNConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, hal_rcc.o(i.RCC_PLLDMDNConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_PLLDMDNConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
</UL>

<P><STRONG><a name="[5c]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[58]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, hal_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[63]"></a>SPI1_INIT</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, spi.o(i.SPI1_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI1_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BiDirectionalLineConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_BiDirectionalLineConfig))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[66]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[65]"></a>SPI_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, hal_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
</UL>

<P><STRONG><a name="[68]"></a>SYSTICK_INIT</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tim_base.o(i.SYSTICK_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SYSTICK_INIT &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
</UL>

<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, isr.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysTick_Handler &rArr; TaskHandler &rArr; TSKH_10ms_Serv &rArr; KEY_Reader &rArr; KEY6_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decre_Delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_mm32spin2xx_p.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, isr.o(i.TIM1_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM1_CC_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>TIM_GetITStatus</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, hal_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>TSKH_100ms_Serv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskhandler.o(i.TSKH_100ms_Serv))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[71]"></a>TSKH_10ms_Serv</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, taskhandler.o(i.TSKH_10ms_Serv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TSKH_10ms_Serv &rArr; KEY_Reader &rArr; KEY6_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_SCAN
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Reader
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[73]"></a>TSKH_1ms_Serv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskhandler.o(i.TSKH_1ms_Serv))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[75]"></a>TSKH_20ms_Serv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskhandler.o(i.TSKH_20ms_Serv))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[78]"></a>TSKH_500ms_Serv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskhandler.o(i.TSKH_500ms_Serv))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[76]"></a>TSKH_50ms_Serv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskhandler.o(i.TSKH_50ms_Serv))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[74]"></a>TSKH_5ms_Serv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, taskhandler.o(i.TSKH_5ms_Serv))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHandler
</UL>

<P><STRONG><a name="[6e]"></a>TaskHandler</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, taskhandler.o(i.TaskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TaskHandler &rArr; TSKH_10ms_Serv &rArr; KEY_Reader &rArr; KEY6_Server &rArr; KEY_TEST &rArr; LED1_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_5ms_Serv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_50ms_Serv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_500ms_Serv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_20ms_Serv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_1ms_Serv
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_10ms_Serv
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSKH_100ms_Serv
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[79]"></a>UART1_INIT</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, uart.o(i.UART1_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UART1_INIT &rArr; UART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>UART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, isr.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART1_IRQHandler &rArr; UART1_IT_ReceiveDATA &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IT_ReceiveDATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>UART1_IT_ReceiveDATA</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, uart.o(i.UART1_IT_ReceiveDATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IT_ReceiveDATA &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[80]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IT_ReceiveDATA
</UL>

<P><STRONG><a name="[7d]"></a>UART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
</UL>

<P><STRONG><a name="[7f]"></a>UART_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IT_ReceiveDATA
</UL>

<P><STRONG><a name="[7c]"></a>UART_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
</UL>

<P><STRONG><a name="[7a]"></a>UART_Init</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, hal_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
</UL>

<P><STRONG><a name="[81]"></a>UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IT_ReceiveDATA
</UL>

<P><STRONG><a name="[38]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; UART1_INIT &rArr; UART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_INIT
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_INIT
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_INIT
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Config
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6b]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32spin2xx_p.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6c]"></a>SetSysClockToXX_HSI</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, system_mm32spin2xx_p.o(i.SetSysClockToXX_HSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SetSysClockToXX_HSI &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[6a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tim_base.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
